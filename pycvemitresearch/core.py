#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import html_to_json

url = {
    "MITREv1":"https://cve.mitre.org/cgi-bin/cvename.cgi"
    }

def http_get_cve(cve):
    return html_to_json.convert(requests.get(url=url["MITREv1"], params={"name":cve}, verify=True).text)

def parser_html_cve(html):
    return {
        "CVE" : html["html"][0]['div'][3]['div'][0]['table'][0]['tr'][1]['td'][0]['h2'][0]['_value'],
        "NIST" : html["html"][0]['div'][3]['div'][0]['table'][0]['tr'][1]['td'][1]['div'][0]['a'][0]['_attributes']['href'],
        "Description" : html["html"][0]['div'][3]['div'][0]['table'][0]['tr'][3]['td'][0]['_value'],
        "AssignCNA" : html["html"][0]['div'][3]['div'][0]['table'][0]['tr'][7]['th'][0]['_value'],
        "CNA" : html["html"][0]['div'][3]['div'][0]['table'][0]['tr'][8]['td'][0]['_value'],
        "Datecreated" : html["html"][0]['div'][3]['div'][0]['table'][0]['tr'][10]['td'][0]['b'][0]['_value'],
        "References" : html["html"][0]['div'][3]['div'][0]['table'][0]['tr'][4]['th'][0]['_value'],
        "Referencesinfo" : html["html"][0]['div'][3]['div'][0]['table'][0]['tr'][6]['td'][0]['ul'][0]['li'][0]['a'][0]['_attributes']['href']
    } if html["html"][0]["div"][3].get('h2', 'ERROR') == "ERROR" else html["html"][0]["div"][3]["h2"][0]["_value"]

def cveinfo(cve):
    """ cveinfo() returns a more information about the CVE"""
    return parser_html_cve(http_get_cve(cve))

def keyword(self, param):
    """ keyword() returns a list containing all the CVE and description per vendor"""
    data = self.http_get('keyword', query=param)
    html = data.text
    with open("html_cve.html", "w") as f:
        new_html = html.replace("ï»¿","")
        f.write(new_html)

    with open("html_cve.html") as html_file:
        output_json_dict = html_to_json.convert(html_file)
        #print(type(output_json_dict))#is a dict
        #print(output_json_dict)
        """for i in output_json_dict:
            print(f'This is i: {i}')""" #keys of dict(_values and html)
        html_json= output_json_dict["html"] #html key
        #print(type(html_json)) #Is a list
        #print(html_json)
        for a in html_json:
            #print(type(a))#is a dict
            #print(a)
            """for b in a:
                print(b)"""#keys in html
            div = a['div'] #working with div page
            CenterP= div[3] #div id= Center Pane
            #print(f'This is div[2]: {div[3]}')
            CenterPdiv= CenterP['div']
            Noresults = CenterPdiv[0] # when there aren't results
            vNores = Noresults['b']
            resultscve= vNores[0]['_value']
            if resultscve == "0":
                print("There are 0 CVE Records that match your search")
            if resultscve  > "0":
                print(f"There are {resultscve} CVE Records that match your search:")
                #print(CenterP['div'])
                TableCenterP = CenterPdiv[1]
                #print(TableCenterP)
                ATableCenterP= TableCenterP['table']#Search results table
                #print(ATableCenterP)
                trTableCenterP = ATableCenterP[0]['tr']
                #print(ATableCenterP[0]['tr'])
                lentr= len(trTableCenterP)
                #print(trTableCenterP[0]['td'])
                for c in trTableCenterP:
                    td= c['td']
                    #print(c['td'])#all keys of c
                    for d in td:
                        a = "a"
                        v = "_value"
                        #print(d)
                        if a in d.keys():
                            tda = d['a']  # CVE
                            for va in tda:
                                CVE = va['_value']
                                attrib = va['_attributes']
                                href =attrib['href'] #URL for CVE details
                                    #print(href)
                                #print(f'Im printing value a {CVE}')
                        if v in d:
                            description = d['_value']  # Description
                            print(f'{CVE} - {description}')
                    """for e in d:
                        print(e)"""
