#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import html_to_json

url = {
    "MITREv1":"https://cve.mitre.org/cgi-bin/cvename.cgi",
    "MITREv2":"https://cve.mitre.org/cgi-bin/cvekey.cgi"
    }

def http_get_cve(cve):
    return html_to_json.convert(requests.get(url=url["MITREv1"], params={"name":cve}, verify=True).text)

def parser_html_cve(html):
        "id_cve" : html["html"][0]['div'][3]['div'][0]['table'][0]['tr'][1]['td'][0]['h2'][0]['_value'],
        "nist_url" : html["html"][0]['div'][3]['div'][0]['table'][0]['tr'][1]['td'][1]['div'][0]['a'][0]['_attributes']['href'],
        "description" : html["html"][0]['div'][3]['div'][0]['table'][0]['tr'][3]['td'][0]['_value'],
        "assign_CNA" : html["html"][0]['div'][3]['div'][0]['table'][0]['tr'][7]['th'][0]['_value'],
        "CNA" : html["html"][0]['div'][3]['div'][0]['table'][0]['tr'][8]['td'][0]['_value'],
        "created" : html["html"][0]['div'][3]['div'][0]['table'][0]['tr'][10]['td'][0]['b'][0]['_value'],
    }} if not any(status in json.dumps(html["html"][0]["div"][3]) for status in ["RESERVED", "REJECT", "ERROR"]) else {"status":"error","msg":""}

def cveinfo(cve):
    """ cveinfo() returns a more information about the CVE"""
    return parser_html_cve(http_get_cve(cve))

def http_get_vendor(vendor):
    return html_to_json.convert(requests.get(url=url["MITREv2"], params={"keyword":vendor}, verify=True).text)

def parser_html_vendor(html):
    return [{"id_cve":cve['td'][0]['a'][0]['_value'],"description":cve['td'][1]['_value']} for cve in html["html"][0]['div'][3]['div'][1]['table'][0]['tr']]

def vendorinfo(vendor):
    """ vendorinfo() returns CVE list about the vendor"""
    return parser_html_vendor((http_get_vendor(vendor)))
